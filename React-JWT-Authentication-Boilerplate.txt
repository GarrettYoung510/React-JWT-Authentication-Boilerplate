sudo instead of npm for mac users
rm -rf .git (if cloning)

## terminal commands:

npm init -y

npm i express mongoose if-env morgan bcryptjs passport cors passport-jwt passport-local jwt-simple validator

npm i --save-dev concurrently

.gitignore - node_modules, package-lock.json, .DS_Store, .idea/

## inside package.json 

Delete scripts -->   "scripts": {
    "start": "if-env NODE_ENV=production && npm run start:prod || npm run start:dev",
    "start:prod": "node server.js",
    "start:dev": "concurrently \"nodemon --ignore 'client/*'\" \"npm run client\"",
    "client": "cd client && npm run start",
    "install": "cd client && npm install",
    "build": "cd client && npm run build",
    "heroku-postbuild": "npm run build"
}
 
## index.js main server

const express = require("express");
const morgan = require("morgan");
const mongoose = require("mongoose");
const cors = require("cors");

morgan lets us know what request was made, status, how long it took, and what the response and how long it took the response

cors if proxy does not work, take in any request coming from any servers or we can make it only at a specific port, can configure cors to take from anywhere so proxy is not even needed. cors always being used by our browser.

## index.js routes folder
const router = require('express').Router();

## index.js routes/apiRoutes folder

## models
index.js

object for require 

User.js
mongoose, mongoose schema, validator, bcrypt

bcrypt salt & hash: salt = random characters, hash is user password + salt even more secure gets hashed by bcrypt

## controllers

authcontrollers.js
require models to access data, then sign up async
sign in
JSON web tokens and passport 

## services
third party services ex. stripe api or oauth 
passport